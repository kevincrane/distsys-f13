package distsys.mapreduce;

/**
 * Created with IntelliJ IDEA.
 * User: Prashanth
 * Date: 11/12/13
 * Time: 3:39 AM
 * To change this template use File | Settings | File Templates.
 */

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;

/**
 * Generic Mapper class for a Map Reduce job
 * User specifies the data type of the input/output keys and values,
 * and overrides the map(Kin, Vin) method
 *
 * @param <Kin>  Data type of the input key
 * @param <Vin>  Data type of the input value
 * @param <Kout> Data type of the output key
 * @param <Vout> Data type of the output value
 */

abstract class Mapper<Kin, Vin, Kout, Vout> implements Serializable {
    List<Record<Kout, Vout>> output;

    public Mapper() {
        output = new ArrayList<Record<Kout, Vout>>();
    }

    /**
     * Map method called on every record read from the input file in KDFS. Takes a key/value
     * pair from a DistFile Record (from DataNode), performs the map operation on it, and stores
     * result in List output
     *
     * @param key   Key for mapper
     * @param value Value for reducer
     */
    abstract public void map(Kin key, Vin value);

    /**
     * Returns the list of records created by running map() on an individual record
     *
     * @return Output list generated by map
     */
    public List<Record<Kout, Vout>> getMapOutput() {
        return output;
    }
}